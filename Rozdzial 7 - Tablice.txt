I. Tablica 10 elementów typu int różni się od 10 obiektów typu int:
- nie trzeba każdego obiektu nazywać inaczej
- zajmuje ciągły obszar w pamięci

II. Tablice można utworzyć z elementów tylko jednego typu.

III. unsigned int tab[200] - tab jest tablicą 200 elementów typu unsigned int.

IV.
a) double wspolcz[5.6] = niepoprawna (ilość elementów musi być liczbą całkowitą)
b) double fact[0] = niepoprawna (ilość elementów musi być stałą całkowitą większą od zera)
c) signed int nomin[-6] = niepoprawna (j.w.)

V. int rozmiar = 10; char tab[rozmiar]; = poprawna, gdyż ilość elementów jest już znana w czasie kompilacji.

VI. tablica 12 elementów typu double: double tabl[12];

VII. void tab[237]; = niepoprawny, nie można tworzyć z typu void

VIII. enum (zadanie)

IX. char alfabet[30]; znaki są zakodowane w ASCII, czyli w reprezentacji liter jako liczby. Jedna litera typu char zajmuje 8 bitów.

X. Znak null jest znakiem końca C-stringu. Jest po to, aby oznaczyć zakończenie ciągu liter.

XI. char tabl[14] = { "programowanie" };

XII. char tabl[3] = { 'x', 'y', 'z' };

XIII. tablica char tab[] = { "123" }; ma 4 elementy (123+znak null). Długość stringu to 3 znaki.

XIV. Długość C-stringu to ilość liter należących do niego. Rozmiar C-stringu jest większy o 1 (znak null).

XV.
a) char tab1[4] = { "1,2,3" }; - niepoprawna (przecinki w C-stringu to też znak)
b) char tab2[] = { "1,2,3" }; - poprawna
c) char tab3[3] = { 'A', 'B', 'C' }; - poprawna

XX. Elementy tablic mogą być dowolne poza znakiem null.

XXI. String z tablicy t1 można przepisać do t3, ale nie do t2.

XXII. W funkcji do ktorej wysłano tablicę można dowiedzieć się ile ma elementów, jeśli policzy się wszystkie znaki aż do końca null.

XXIII. Function to append a string to another string (program)

XXIV. float tab[5][2]

XXV. char t[4][2][2] - wypisz w kolejności przechowywania w pamięci:

t[0][0][0]
t[0][0][1]
t[0][1][0]
t[0][1][1]

t[1][0][0]
t[1][0][1]
t[1][1][0]
t[1][1][1]

t[2][0][0]
t[2][0][1]
t[2][1][0]
t[2][1][1]

t[3][0][0]
t[3][0][1]
t[3][1][0]
t[3][1][1]

XXVI. Program for 2-level array (program)

XXVII. double tab[10][5][30];
Do obliczania pozycji w pamięci nie jest potrzebny rozmiar najbardziej z lewej strony (10). Rozmiar który nie jest konieczny do obliczania może być pomocny dla programisty, a także w celu przesłania jednej konkretnej tablicy do funkcji (zamiast całej tablicy).

XXVIII. double tab[10][5][30];
wyrażenia:
tab[1][0][1] - oznacza jeden konkretny element/obiekt/zmienną typu double (jej wartość)
tab[6][4] - oznacza adres w pamięci początku jednej konkretnej tablicy obiektów typu double
tab[1] - oznacza adres w pamięci początku jednej konkretnej tablicy tablic obiektów typu double
tab - oznacza adres w pamięci początku całej tablicy tablic obiektów typu double

XXIX. double tab[10][5][30]; program - funkcja zerująca wszystkie elementy tej tablicy (program)

XXX. Funkcja do analizy binarnej numerów elementów tablicy (program) - save for later